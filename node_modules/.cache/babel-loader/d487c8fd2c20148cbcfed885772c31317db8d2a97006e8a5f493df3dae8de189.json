{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/QuizApp/FrontEnd/quiz-app/src/QuizGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { HeaderNav } from \"./HeaderNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizGenerator = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [technologies, setTechnologies] = useState([]);\n  const [selectedTechnology, setSelectedTechnology] = useState(\"\");\n  const [quizName, setQuizName] = useState(\"\");\n  const [quiz, setQuiz] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/questions/getAllQuestion\");\n      setQuestions(response.data);\n      const distinctTechnologies = [...new Set(response.data.map(question => question.technology))];\n      setTechnologies(distinctTechnologies);\n    } catch (error) {\n      setError(\"Failed to fetch questions\");\n    }\n  };\n  const handleTechnologyChange = e => {\n    setSelectedTechnology(e.target.value);\n  };\n  const handleGenerateQuiz = () => {\n    const filteredQuestions = questions.filter(question => question.technology === selectedTechnology);\n    const selectedQuestions = filteredQuestions.length > 5 ? getRandomItemsFromArray(filteredQuestions, 5) : filteredQuestions;\n    setQuiz(selectedQuestions);\n    const quizData = {\n      quizName: quizName,\n      technology: selectedTechnology,\n      quizQuestions: selectedQuestions.map(question => ({\n        question: question,\n        quiz: null // Set the quiz property to null initially\n      }))\n    };\n    console.log(\"Req\", quizData);\n    axios.post(\"http://localhost:8080/api/quizzes\", quizData).then(response => {\n      console.log(\"Quiz generated successfully:\", response.data);\n    }).catch(error => {\n      console.error(\"Failed to generate quiz:\", error);\n    });\n  };\n  const getRandomItemsFromArray = (array, count) => {\n    const shuffledArray = array.sort(() => Math.random() - 0.5);\n    return shuffledArray.slice(0, count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-3\",\n        children: \"Quiz Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quizName\",\n          children: \"Quiz Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"quizName\",\n          value: quizName,\n          onChange: e => setQuizName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"selectedTechnology\",\n          children: \"Select Technology:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"selectedTechnology\",\n          value: selectedTechnology,\n          onChange: handleTechnologyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), technologies.map(technology => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: technology,\n            children: technology\n          }, technology, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleGenerateQuiz,\n        disabled: !selectedTechnology || !quizName,\n        children: \"Generate Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), quiz.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3\",\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: quiz.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: question.questionText\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger mt-3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizGenerator, \"2IKiz5sI5U0qzQSmUNH0G/4C5/A=\");\n_c = QuizGenerator;\nexport default QuizGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuizGenerator\");","map":{"version":3,"names":["React","useEffect","useState","axios","HeaderNav","jsxDEV","_jsxDEV","QuizGenerator","_s","questions","setQuestions","technologies","setTechnologies","selectedTechnology","setSelectedTechnology","quizName","setQuizName","quiz","setQuiz","error","setError","fetchQuestions","response","get","data","distinctTechnologies","Set","map","question","technology","handleTechnologyChange","e","target","value","handleGenerateQuiz","filteredQuestions","filter","selectedQuestions","length","getRandomItemsFromArray","quizData","quizQuestions","console","log","post","then","catch","array","count","shuffledArray","sort","Math","random","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","onClick","disabled","questionText","_c","$RefreshReg$"],"sources":["/home/vaibhav/QuizApp/FrontEnd/quiz-app/src/QuizGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { HeaderNav } from \"./HeaderNav\";\n\nconst QuizGenerator = () => {\n  const [questions, setQuestions] = useState([]);\n  const [technologies, setTechnologies] = useState([]);\n  const [selectedTechnology, setSelectedTechnology] = useState(\"\");\n  const [quizName, setQuizName] = useState(\"\");\n  const [quiz, setQuiz] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get(\n        \"http://localhost:8080/api/questions/getAllQuestion\"\n      );\n      setQuestions(response.data);\n\n      const distinctTechnologies = [\n        ...new Set(response.data.map((question) => question.technology)),\n      ];\n      setTechnologies(distinctTechnologies);\n    } catch (error) {\n      setError(\"Failed to fetch questions\");\n    }\n  };\n\n  const handleTechnologyChange = (e) => {\n    setSelectedTechnology(e.target.value);\n  };\n\n  const handleGenerateQuiz = () => {\n    const filteredQuestions = questions.filter(\n      (question) => question.technology === selectedTechnology\n    );\n    const selectedQuestions =\n      filteredQuestions.length > 5\n        ? getRandomItemsFromArray(filteredQuestions, 5)\n        : filteredQuestions;\n    setQuiz(selectedQuestions);\n\n    const quizData = {\n      quizName: quizName,\n      technology: selectedTechnology,\n      quizQuestions: selectedQuestions.map((question) => ({\n        question: question,\n        quiz: null, // Set the quiz property to null initially\n      })),\n    };\n\n    console.log(\"Req\", quizData);\n\n    axios\n      .post(\"http://localhost:8080/api/quizzes\", quizData)\n      .then((response) => {\n        console.log(\"Quiz generated successfully:\", response.data);\n      })\n      .catch((error) => {\n        console.error(\"Failed to generate quiz:\", error);\n      });\n  };\n\n  const getRandomItemsFromArray = (array, count) => {\n    const shuffledArray = array.sort(() => Math.random() - 0.5);\n    return shuffledArray.slice(0, count);\n  };\n\n  return (\n    <div>\n      <HeaderNav />\n      <div className=\"container\">\n        <h2 className=\"mt-3\">Quiz Generator</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"quizName\">Quiz Name:</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"quizName\"\n            value={quizName}\n            onChange={(e) => setQuizName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"selectedTechnology\">Select Technology:</label>\n          <select\n            className=\"form-control\"\n            id=\"selectedTechnology\"\n            value={selectedTechnology}\n            onChange={handleTechnologyChange}\n          >\n            <option value=\"\">Select</option>\n            {technologies.map((technology) => (\n              <option value={technology} key={technology}>\n                {technology}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          className=\"btn btn-primary\"\n          onClick={handleGenerateQuiz}\n          disabled={!selectedTechnology || !quizName}\n        >\n          Generate Quiz\n        </button>\n        {quiz.length > 0 && (\n          <div>\n            <h3 className=\"mt-3\">Quiz Questions</h3>\n            <ul className=\"list-group\">\n              {quiz.map((question) => (\n                <li className=\"list-group-item\" key={question.id}>\n                  {question.questionText}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {error && <div className=\"text-danger mt-3\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}