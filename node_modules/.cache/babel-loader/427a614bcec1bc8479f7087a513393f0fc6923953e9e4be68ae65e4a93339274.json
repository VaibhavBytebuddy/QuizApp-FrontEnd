{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/QuizApp/FrontEnd/quiz-app/src/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport UserHeaderNav from \"./UserHeaderNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  var _location$state;\n  const [quizList, setQuizList] = useState([]);\n  const [selectedTechnology, setSelectedTechnology] = useState(\"\");\n  const [selectedQuiz, setSelectedQuiz] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [quizQuest, setQuizQuest] = useState([]);\n  const [totalMarks, setTotalMarks] = useState(0);\n  const location = useLocation();\n  const username = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username;\n  useEffect(() => {\n    fetchQuizList();\n  }, []);\n  useEffect(() => {\n    // console.log(\"Selected Quiz:\", selectedQuiz);\n    if (selectedQuiz) {\n      fetchQuizQuest(selectedQuiz);\n    }\n  }, [selectedQuiz]);\n  useEffect(() => {\n    console.log(\"Selected Marks Ussefeffect:\", totalMarks);\n  }, [totalMarks]);\n  const fetchQuizList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/quizzes\");\n      setQuizList(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch quiz list\");\n    }\n  };\n  const fetchQuizQuest = async quizId => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/quizzes/getQuizQuestById/${quizId}`);\n      setQuizQuest(response.data);\n      setSelectedOptions([]);\n    } catch (error) {\n      setError(\"Failed to fetch quiz questions\");\n    }\n  };\n  const handleTechnologyChange = e => {\n    setSelectedTechnology(e.target.value);\n    setSelectedQuiz(\"\");\n    setQuizQuest([]);\n  };\n  const handleQuizChange = e => {\n    setSelectedQuiz(e.target.value);\n  };\n  const handleOptionChange = (questionId, optionNumber) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedOptions = [...prevSelectedOptions];\n      const questionIndex = updatedOptions.findIndex(option => option.questionId === questionId);\n      if (questionIndex !== -1) {\n        // Question already exists in selectedOptions, update the option\n        updatedOptions[questionIndex] = {\n          questionId,\n          optionNumber\n        };\n      } else {\n        // Add the question and option to selectedOptions\n        updatedOptions.push({\n          questionId,\n          optionNumber\n        });\n      }\n      return updatedOptions;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let marks = 0; // Variable to store the total marks\n\n      // Send each user answer individually to the backend for saving\n      for (const userAnswer of selectedOptions) {\n        const {\n          questionId,\n          optionNumber\n        } = userAnswer;\n        const userAnswers = {\n          userId: 1,\n          // Replace with the actual user ID\n          questionId: questionId,\n          selectedOption: optionNumber\n        };\n        console.log(userAnswers);\n        const response = await axios.post(\"http://localhost:8080/api/user-answers/save\", userAnswers);\n        console.log(\"User answer submitted:\", response.data);\n\n        // Increment the marks if the selected option is correct\n        const selectedQuestion = quizQuest.find(question => question.id === questionId);\n        // console.log(\"Quest id\", questionId);\n        // console.log(\"Correct id\", selectedQuestion.correctOption);\n        // console.log(\"Quest id\", selectedQuestion);\n        if (selectedQuestion.correctOption === optionNumber) {\n          marks += 1;\n        }\n      }\n      setTotalMarks(marks); // Update the total marks state\n    } catch (error) {\n      setError(\"Failed to submit quiz\");\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n  const distinctTechnologies = [...new Set(quizList.map(quiz => quiz.technology))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserHeaderNav, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-3\",\n        children: \"Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Select Technology:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedTechnology,\n            onChange: handleTechnologyChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), distinctTechnologies.map(technology => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: technology,\n              children: technology\n            }, technology, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), selectedTechnology && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Select Quiz:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedQuiz,\n            onChange: handleQuizChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), quizList.filter(quiz => quiz.technology === selectedTechnology).map(quiz => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: quiz.id,\n              children: quiz.quizName\n            }, quiz.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), selectedQuiz && quizQuest.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Quiz Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), quizQuest.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: question.questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${question.id}`,\n                    value: 1,\n                    checked: selectedOptions.find(selectedOption => selectedOption.questionId === question.id && selectedOption.optionNumber === 1) !== undefined,\n                    onChange: () => handleOptionChange(question.id, 1),\n                    className: \"form-check-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 25\n                  }, this), question.option1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${question.id}`,\n                    value: 2,\n                    checked: selectedOptions.find(selectedOption => selectedOption.questionId === question.id && selectedOption.optionNumber === 2) !== undefined,\n                    onChange: () => handleOptionChange(question.id, 2),\n                    className: \"form-check-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this), question.option2]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${question.id}`,\n                    value: 3,\n                    checked: selectedOptions.find(selectedOption => selectedOption.questionId === question.id && selectedOption.optionNumber === 3) !== undefined,\n                    onChange: () => handleOptionChange(question.id, 3),\n                    className: \"form-check-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this), question.option3]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: `question-${question.id}`,\n                    value: 4,\n                    checked: selectedOptions.find(selectedOption => selectedOption.questionId === question.id && selectedOption.optionNumber === 4) !== undefined,\n                    onChange: () => handleOptionChange(question.id, 4),\n                    className: \"form-check-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), question.option4]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), totalMarks > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Total Marks: \", totalMarks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"LHZDRdG/M50GV1onL6pAKdh6WwE=\", false, function () {\n  return [useLocation];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","UserHeaderNav","jsxDEV","_jsxDEV","QuizPage","_s","_location$state","quizList","setQuizList","selectedTechnology","setSelectedTechnology","selectedQuiz","setSelectedQuiz","selectedOptions","setSelectedOptions","error","setError","quizQuest","setQuizQuest","totalMarks","setTotalMarks","location","username","state","fetchQuizList","fetchQuizQuest","console","log","response","get","data","quizId","handleTechnologyChange","e","target","value","handleQuizChange","handleOptionChange","questionId","optionNumber","prevSelectedOptions","updatedOptions","questionIndex","findIndex","option","push","handleSubmit","preventDefault","marks","userAnswer","userAnswers","userId","selectedOption","post","selectedQuestion","find","question","id","correctOption","children","fileName","_jsxFileName","lineNumber","columnNumber","distinctTechnologies","Set","map","quiz","technology","className","onChange","filter","quizName","length","questionText","type","name","checked","undefined","option1","option2","option3","option4","onClick","_c","$RefreshReg$"],"sources":["/home/vaibhav/QuizApp/FrontEnd/quiz-app/src/QuizPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport UserHeaderNav from \"./UserHeaderNav\";\n\nconst QuizPage = () => {\n  const [quizList, setQuizList] = useState([]);\n  const [selectedTechnology, setSelectedTechnology] = useState(\"\");\n  const [selectedQuiz, setSelectedQuiz] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [quizQuest, setQuizQuest] = useState([]);\n  const [totalMarks, setTotalMarks] = useState(0);\n\n  const location = useLocation();\n  const username = location.state?.username;\n\n  useEffect(() => {\n    fetchQuizList();\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"Selected Quiz:\", selectedQuiz);\n    if (selectedQuiz) {\n      fetchQuizQuest(selectedQuiz);\n    }\n  }, [selectedQuiz]);\n\n  useEffect(() => {\n    console.log(\"Selected Marks Ussefeffect:\", totalMarks);\n  }, [totalMarks]);\n\n  const fetchQuizList = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/quizzes\");\n      setQuizList(response.data);\n    } catch (error) {\n      setError(\"Failed to fetch quiz list\");\n    }\n  };\n\n  const fetchQuizQuest = async (quizId) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/api/quizzes/getQuizQuestById/${quizId}`\n      );\n      setQuizQuest(response.data);\n      setSelectedOptions([]);\n    } catch (error) {\n      setError(\"Failed to fetch quiz questions\");\n    }\n  };\n\n  const handleTechnologyChange = (e) => {\n    setSelectedTechnology(e.target.value);\n    setSelectedQuiz(\"\");\n    setQuizQuest([]);\n  };\n\n  const handleQuizChange = (e) => {\n    setSelectedQuiz(e.target.value);\n  };\n\n  const handleOptionChange = (questionId, optionNumber) => {\n    setSelectedOptions((prevSelectedOptions) => {\n      const updatedOptions = [...prevSelectedOptions];\n      const questionIndex = updatedOptions.findIndex(\n        (option) => option.questionId === questionId\n      );\n\n      if (questionIndex !== -1) {\n        // Question already exists in selectedOptions, update the option\n        updatedOptions[questionIndex] = { questionId, optionNumber };\n      } else {\n        // Add the question and option to selectedOptions\n        updatedOptions.push({ questionId, optionNumber });\n      }\n\n      return updatedOptions;\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      let marks = 0; // Variable to store the total marks\n\n      // Send each user answer individually to the backend for saving\n      for (const userAnswer of selectedOptions) {\n        const { questionId, optionNumber } = userAnswer;\n\n        const userAnswers = {\n          userId: 1, // Replace with the actual user ID\n          questionId: questionId,\n          selectedOption: optionNumber,\n        };\n\n        console.log(userAnswers);\n\n        const response = await axios.post(\n          \"http://localhost:8080/api/user-answers/save\",\n          userAnswers\n        );\n\n        console.log(\"User answer submitted:\", response.data);\n\n        // Increment the marks if the selected option is correct\n        const selectedQuestion = quizQuest.find(\n          (question) => question.id === questionId\n        );\n        // console.log(\"Quest id\", questionId);\n        // console.log(\"Correct id\", selectedQuestion.correctOption);\n        // console.log(\"Quest id\", selectedQuestion);\n        if (selectedQuestion.correctOption === optionNumber) {\n          marks += 1;\n        }\n      }\n\n      setTotalMarks(marks); // Update the total marks state\n    } catch (error) {\n      setError(\"Failed to submit quiz\");\n    }\n  };\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  const distinctTechnologies = [\n    ...new Set(quizList.map((quiz) => quiz.technology)),\n  ];\n\n  return (\n    <div>\n      <UserHeaderNav username={username} />\n      <div className=\"container\">\n        <h2 className=\"mt-3\">Quiz</h2>\n        <form className=\"mt-3\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Select Technology:</label>\n            <select\n              className=\"form-select\"\n              value={selectedTechnology}\n              onChange={handleTechnologyChange}\n            >\n              <option value=\"\">Select</option>\n              {distinctTechnologies.map((technology) => (\n                <option key={technology} value={technology}>\n                  {technology}\n                </option>\n              ))}\n            </select>\n          </div>\n          {selectedTechnology && (\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Quiz:</label>\n              <select\n                className=\"form-select\"\n                value={selectedQuiz}\n                onChange={handleQuizChange}\n              >\n                <option value=\"\">Select</option>\n                {quizList\n                  .filter((quiz) => quiz.technology === selectedTechnology)\n                  .map((quiz) => (\n                    <option key={quiz.id} value={quiz.id}>\n                      {quiz.quizName}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          )}\n          {selectedQuiz && quizQuest.length > 0 && (\n            <div>\n              <h4>Quiz Questions:</h4>\n              {quizQuest.map((question) => (\n                <div key={question.id} className=\"mb-3\">\n                  <h4>{question.questionText}</h4>\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                      <label className=\"form-check-label\">\n                        <input\n                          type=\"radio\"\n                          name={`question-${question.id}`}\n                          value={1}\n                          checked={\n                            selectedOptions.find(\n                              (selectedOption) =>\n                                selectedOption.questionId === question.id &&\n                                selectedOption.optionNumber === 1\n                            ) !== undefined\n                          }\n                          onChange={() => handleOptionChange(question.id, 1)}\n                          className=\"form-check-input\"\n                        />\n                        {question.option1}\n                      </label>\n                    </li>\n                    <li className=\"list-group-item\">\n                      <label className=\"form-check-label\">\n                        <input\n                          type=\"radio\"\n                          name={`question-${question.id}`}\n                          value={2}\n                          checked={\n                            selectedOptions.find(\n                              (selectedOption) =>\n                                selectedOption.questionId === question.id &&\n                                selectedOption.optionNumber === 2\n                            ) !== undefined\n                          }\n                          onChange={() => handleOptionChange(question.id, 2)}\n                          className=\"form-check-input\"\n                        />\n                        {question.option2}\n                      </label>\n                    </li>\n                    <li className=\"list-group-item\">\n                      <label className=\"form-check-label\">\n                        <input\n                          type=\"radio\"\n                          name={`question-${question.id}`}\n                          value={3}\n                          checked={\n                            selectedOptions.find(\n                              (selectedOption) =>\n                                selectedOption.questionId === question.id &&\n                                selectedOption.optionNumber === 3\n                            ) !== undefined\n                          }\n                          onChange={() => handleOptionChange(question.id, 3)}\n                          className=\"form-check-input\"\n                        />\n                        {question.option3}\n                      </label>\n                    </li>\n                    <li className=\"list-group-item\">\n                      <label className=\"form-check-label\">\n                        <input\n                          type=\"radio\"\n                          name={`question-${question.id}`}\n                          value={4}\n                          checked={\n                            selectedOptions.find(\n                              (selectedOption) =>\n                                selectedOption.questionId === question.id &&\n                                selectedOption.optionNumber === 4\n                            ) !== undefined\n                          }\n                          onChange={() => handleOptionChange(question.id, 4)}\n                          className=\"form-check-input\"\n                        />\n                        {question.option4}\n                      </label>\n                    </li>\n                  </ul>\n                </div>\n              ))}\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={handleSubmit}\n              >\n                Submit\n              </button>\n            </div>\n          )}\n        </form>\n        {totalMarks > 0 && (\n          <div className=\"mt-3\">\n            <h4>Total Marks: {totalMarks}</h4>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}